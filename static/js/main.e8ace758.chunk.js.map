{"version":3,"sources":["Component/navbar.jsx","Component/counter.jsx","Component/Counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","console","log","className","style","fontSize","href","fontStyle","this","props","totalCounters","Component","Counter","state","count","counter","value","styles","fontWeight","id","children","getBadgeClasses","formatCount","onClick","onIncrement","fontFamily","onDelete","classes","Counters","onReset","counters","map","App","handleIncrement","index","indexOf","setState","handleReset","c","handleDelete","counterId","filter","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8ace758.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n//Stateless Functional Components:\r\n\r\n// const Navbar = (props) => {\r\n//   return console.log(\"NavBar Rendered\")(\r\n//     <nav className=\"navbar navbar-light bg-light\">\r\n//       <div\r\n//         className=\"container-fluid f4 bold center mw6\"\r\n//         style={{ fontSize: 42 }}\r\n//       >\r\n//         Counter App with React Js\r\n//       </div>\r\n//       <a className=\"navbar-brand \">\r\n//         <span className=\"bg m-4 rounded-pill bg-info\">\r\n//           {this.props.totalCounters}\r\n//         </span>\r\n//       </a>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    console.log(\"NavBar Rendered\");\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-primary\">\r\n        <div\r\n          className=\"container-fluid f4 bold center mw6\"\r\n          style={{ fontSize: 45 }}\r\n        >\r\n          Counter with React Js\r\n        </div>\r\n        <a className=\"navbar-brand \" href=\"#\">\r\n          <span\r\n            className=\"bg m-4 rounded-pill bg-info\"\r\n            style={{ fontStyle: \"italic\" }}\r\n          >\r\n            Total Counter = {this.props.totalCounters}\r\n          </span>\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    count: this.props.counter.value,\r\n    // tags: [\"tags1\", [\"tags2\"], [\"tags3\"]],\r\n  };\r\n\r\n  //  = > Binding Method\r\n\r\n  // constructor() {\r\n  //   super();\r\n  //   this.handleIncrement = this.handleIncrement.bind(this);\r\n  // }\r\n\r\n  //  = > Increment Handler\r\n\r\n  // handleIncrement = (product) => {\r\n  //   console.log(product);\r\n  //   this.setState({ count: this.state.count + 1 });\r\n  //   console.log(\"Increment Clicked\", this);\r\n  // };\r\n\r\n  //  = > Passing Parameter\r\n\r\n  // dohandleIncrement = () => {\r\n  //   this.handleIncrement({ id: 1 });\r\n  // };\r\n\r\n  styles = {\r\n    fontSize: 23,\r\n    fontWeight: \"light\",\r\n    fontStyle: \"italic\",\r\n  };\r\n\r\n  // renderTags() {\r\n  //   if (this.state.tags.length === 0) return <p>There is no Tags</p>;\r\n\r\n  //   return (\r\n  //     <ul>\r\n  //       {this.state.tags.map((tag) => (\r\n  //         <li key={tag}>{tag}</li>\r\n  //       ))}\r\n  //     </ul>\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n    console.log(\"Counter Rendered\");\r\n\r\n    console.log(\"props\", this.props);\r\n    return (\r\n      <div>\r\n        <h5>{this.props.id}</h5>\r\n        {this.props.children}\r\n\r\n        <span style={this.styles} className={this.getBadgeClasses()}>\r\n          Count = {this.formatCount()}\r\n        </span>\r\n        <button\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          className=\"btn btn-secondary btn-md m-3\"\r\n          style={{ fontFamily: \"cursive\" }}\r\n        >\r\n          Increment\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\" btn btn-danger btn-md m-3\"\r\n        >\r\n          Delete\r\n        </button>\r\n        {/* {this.state.tags.length === 0 && \"Please Create New Tags!!!\"}\r\n        {this.renderTags()} */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"bg m-4 rounded-pill bg-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n  //   state = {\r\n  //     counters: [\r\n  //       { id: 1, value: 0 },\r\n  //       { id: 2, value: 0 },\r\n  //       { id: 3, value: 0 },\r\n  //       { id: 4, value: 0 },\r\n  //       { id: 5, value: 5 },\r\n  //     ],\r\n  //   };\r\n\r\n  //   handleIncrement = (counter) => {\r\n  //     const counters = [...this.state.counters];\r\n  //     const index = counters.indexOf(counter);\r\n  //     counters[index] = { ...counter };\r\n  //     counters[index].value++;\r\n  //     this.setState({ counters });\r\n  //   };\r\n\r\n  //   handleReset = () => {\r\n  //     const counters = this.state.counters.map((c) => {\r\n  //       c.value = 0;\r\n  //       return c;\r\n  //     });\r\n  //     this.setState({ counters });\r\n  //   };\r\n\r\n  //   handleDelete = (counterId) => {\r\n  //     console.log(\"Clicked\", counterId);\r\n  //     const counters = this.state.counters.filter((c) => c.id !== counterId);\r\n  //     this.setState({ counters });\r\n  //   };\r\n\r\n  render() {\r\n    console.log(\"Counters Rendered\");\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={this.props.onReset}\r\n          className=\"btn btn-outline-primary btn-lg m-4\"\r\n          style={{ fontFamily: \"fantasy\" }}\r\n        >\r\n          Reset\r\n        </button>\r\n\r\n        {this.props.counters.map((counter) => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={this.props.onDelete}\r\n            onIncrement={this.props.onIncrement}\r\n            // value={counter.value}\r\n            // id={counter.id}\r\n            counter={counter}\r\n          >\r\n            <h4>Welcome to React Js</h4>\r\n          </Counter>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from 'react';\nimport Navbar from './Component/navbar';\nimport './Css/App.css';\nimport './Css/Stylish.css';\nimport Counters from './Component/Counters';\n\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n      { id: 5, value: 0 },\n\n    ],\n  };\n\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleDelete = (counterId) => {\n    console.log(\"Clicked\", counterId);\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n  render() {\n    console.log(\"App Rendered\");\n    return (\n      <React.Fragment>\n        <Navbar totalCounters={this.state.counters.filter(c => c.value > 0).length}\n        />\n        <main className=\"containe tc\">\n          <Counters\n            counters={this.state.counters}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onDelete={this.handleDelete}\n          />\n        </main>\n      </React.Fragment>\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Css/index.css';\nimport App from './App';\nimport 'tachyons';\nimport './Css/Stylish.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"bgImg\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}