{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\I T world\\\\Desktop\\\\Counter-app\\\\src\\\\Component\\\\counter.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: this.props.counter.value // tags: [\"tags1\", [\"tags2\"], [\"tags3\"]],\n\n    };\n    this.styles = {\n      fontSize: 23,\n      fontWeight: \"light\",\n      fontStyle: \"italic\"\n    };\n  }\n\n  // renderTags() {\n  //   if (this.state.tags.length === 0) return <p>There is no Tags</p>;\n  //   return (\n  //     <ul>\n  //       {this.state.tags.map((tag) => (\n  //         <li key={tag}>{tag}</li>\n  //       ))}\n  //     </ul>\n  //   );\n  // }\n  render() {\n    console.log(\"Counter Rendered\");\n    console.log(\"props\", this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: this.props.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), this.props.children, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: this.styles,\n          className: this.getBadgeClasses(),\n          children: [\"Count = \", this.formatCount()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onIncrement(this.props.counter),\n          className: \"btn btn-secondary btn-md m-3\",\n          style: {\n            fontFamily: \"cursive\"\n          },\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onIncrement(this.props.counter),\n          className: \"btn btn-secondary btn-md m-3\",\n          style: {\n            fontFamily: \"cursive\"\n          },\n          disabled: this.props.counter.value === 0 ? 'disabled' : \" \",\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onDelete(this.props.counter.id),\n          className: \" btn btn-danger btn-md m-3\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  getBadgeClasses() {\n    let classes = \"bg m-4 rounded-pill bg-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      value\n    } = this.props.counter;\n    return value === 0 ? \"Zero\" : value;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/I T world/Desktop/Counter-app/src/Component/counter.jsx"],"names":["React","Component","Counter","state","count","props","counter","value","styles","fontSize","fontWeight","fontStyle","render","console","log","id","children","getBadgeClasses","formatCount","onIncrement","fontFamily","onDelete","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,KADpB,CAEN;;AAFM,KADsB;AAAA,SA2B9BC,MA3B8B,GA2BrB;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,UAAU,EAAE,OAFL;AAGPC,MAAAA,SAAS,EAAE;AAHJ,KA3BqB;AAAA;;AAiC9B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEAD,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKT,KAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA,kBAAK,KAAKA,KAAL,CAAWU;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKV,KAAL,CAAWW,QAFd,eAIE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAM,UAAA,KAAK,EAAE,KAAKR,MAAlB;AAA0B,UAAA,SAAS,EAAE,KAAKS,eAAL,EAArC;AAAA,iCACW,KAAKC,WAAL,EADX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAUE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AACE,UAAA,OAAO,EAAE,MAAM,KAAKb,KAAL,CAAWc,WAAX,CAAuB,KAAKd,KAAL,CAAWC,OAAlC,CADjB;AAEE,UAAA,SAAS,EAAC,8BAFZ;AAGE,UAAA,KAAK,EAAE;AAAEc,YAAAA,UAAU,EAAE;AAAd,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AACE,UAAA,OAAO,EAAE,MAAM,KAAKf,KAAL,CAAWc,WAAX,CAAuB,KAAKd,KAAL,CAAWC,OAAlC,CADjB;AAEE,UAAA,SAAS,EAAC,8BAFZ;AAGE,UAAA,KAAK,EAAE;AAAEc,YAAAA,UAAU,EAAE;AAAd,WAHT;AAIE,UAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWC,OAAX,CAAmBC,KAAnB,KAA6B,CAA7B,GAAiC,UAAjC,GAA8C,GAJ1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAkBE;AACE,UAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWgB,QAAX,CAAoB,KAAKhB,KAAL,CAAWC,OAAX,CAAmBS,EAAvC,CADjB;AAEE,UAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyCD;;AAEDE,EAAAA,eAAe,GAAG;AAChB,QAAIK,OAAO,GAAG,yBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKjB,KAAL,CAAWC,OAAX,CAAmBC,KAAnB,KAA6B,CAA7B,GAAiC,SAAjC,GAA6C,SAAxD;AACA,WAAOe,OAAP;AACD;;AAEDJ,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEX,MAAAA;AAAF,QAAY,KAAKF,KAAL,CAAWC,OAA7B;AAEA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AAtG6B;;AAyGhC,eAAeL,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    count: this.props.counter.value,\r\n    // tags: [\"tags1\", [\"tags2\"], [\"tags3\"]],\r\n  };\r\n\r\n  //  = > Binding Method\r\n\r\n  // constructor() {\r\n  //   super();\r\n  //   this.handleIncrement = this.handleIncrement.bind(this);\r\n  // }\r\n\r\n  //  = > Increment Handler\r\n\r\n  // handleIncrement = (product) => {\r\n  //   console.log(product);\r\n  //   this.setState({ count: this.state.count + 1 });\r\n  //   console.log(\"Increment Clicked\", this);\r\n  // };\r\n\r\n  //  = > Passing Parameter\r\n\r\n  // dohandleIncrement = () => {\r\n  //   this.handleIncrement({ id: 1 });\r\n  // };\r\n\r\n  styles = {\r\n    fontSize: 23,\r\n    fontWeight: \"light\",\r\n    fontStyle: \"italic\",\r\n  };\r\n\r\n  // renderTags() {\r\n  //   if (this.state.tags.length === 0) return <p>There is no Tags</p>;\r\n\r\n  //   return (\r\n  //     <ul>\r\n  //       {this.state.tags.map((tag) => (\r\n  //         <li key={tag}>{tag}</li>\r\n  //       ))}\r\n  //     </ul>\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n    console.log(\"Counter Rendered\");\r\n\r\n    console.log(\"props\", this.props);\r\n    return (\r\n      <div className='row'>\r\n        <h5>{this.props.id}</h5>\r\n        {this.props.children}\r\n\r\n        <div className='col-1'>\r\n          <span style={this.styles} className={this.getBadgeClasses()}>\r\n            Count = {this.formatCount()}\r\n          </span>\r\n        </div>\r\n\r\n        <div className='col'>\r\n          <button\r\n            onClick={() => this.props.onIncrement(this.props.counter)}\r\n            className=\"btn btn-secondary btn-md m-3\"\r\n            style={{ fontFamily: \"cursive\" }}\r\n          >\r\n            Increment\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => this.props.onIncrement(this.props.counter)}\r\n            className=\"btn btn-secondary btn-md m-3\"\r\n            style={{ fontFamily: \"cursive\" }}\r\n            disabled={this.props.counter.value === 0 ? 'disabled' : \" \"}\r\n          >\r\n            -\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => this.props.onDelete(this.props.counter.id)}\r\n            className=\" btn btn-danger btn-md m-3\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n\r\n        {/* {this.state.tags.length === 0 && \"Please Create New Tags!!!\"}\r\n        {this.renderTags()} */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"bg m-4 rounded-pill bg-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}